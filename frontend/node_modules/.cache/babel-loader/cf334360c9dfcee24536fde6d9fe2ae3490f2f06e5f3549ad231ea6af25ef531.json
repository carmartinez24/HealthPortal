{"ast":null,"code":"var _jsxFileName = \"/Users/kellyung/Desktop/IrvineHacks/IrvineHacks/react-app/src/components/Report.js\",\n  _s = $RefreshSig$();\nimport './Report.css';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Report({\n  reports,\n  setReports\n}) {\n  _s();\n  const [add, setAdd] = useState(false);\n  const [reply, setReply] = useState(false);\n  const [text, setText] = useState(null);\n  const [date, setDate] = useState(new Date());\n  const [replyIndex, setReplyIndex] = useState(null);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setDate(new Date());\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, []);\n  const handleAdd = () => {\n    setAdd(true);\n  };\n  const handlePost = () => {\n    setReports(prevReports => [{\n      text,\n      date,\n      replies: []\n    }, ...prevReports]);\n    setAdd(false);\n    setText(null);\n  };\n  const handleReply = index => {\n    setReply(true);\n    setReplyIndex(index);\n  };\n  const handlePostReply = index => {\n    setReports(prevReports => {\n      return prevReports.map((report, i) => {\n        if (i === index) {\n          return {\n            ...report,\n            replies: [...report.replies, {\n              text,\n              date\n            }]\n          };\n        }\n        return report;\n      });\n    });\n    setReply(false);\n    setReplyIndex(null);\n    setText(null);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"report-header\",\n        children: \"Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAdd,\n        children: \"+ New Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-editor\",\n        children: [add && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ReactQuill, {\n            value: text,\n            onChange: value => setText(value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePost,\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: reports.map((report, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"reports\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                dangerouslySetInnerHTML: {\n                  __html: report.text\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: report.date.toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleReply(index),\n              children: \"Reply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 25\n            }, this), reply && replyIndex === index && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(ReactQuill, {\n                value: text,\n                onChange: value => setText(value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handlePostReply(index),\n                children: \"Post\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true), report.replies.map((reply, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"reports\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  dangerouslySetInnerHTML: {\n                    __html: reply.text\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: report.date.toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 33\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this))]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Report, \"eeT2rxfLGv2Pka4MaBKS+ByAbGc=\");\n_c = Report;\n;\nvar _c;\n$RefreshReg$(_c, \"Report\");","map":{"version":3,"names":["useState","useEffect","ReactQuill","jsxDEV","_jsxDEV","Fragment","_Fragment","Report","reports","setReports","_s","add","setAdd","reply","setReply","text","setText","date","setDate","Date","replyIndex","setReplyIndex","intervalId","setInterval","clearInterval","handleAdd","handlePost","prevReports","replies","handleReply","index","handlePostReply","map","report","i","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","dangerouslySetInnerHTML","__html","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/kellyung/Desktop/IrvineHacks/IrvineHacks/react-app/src/components/Report.js"],"sourcesContent":["import './Report.css';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n\nexport default function Report({ reports, setReports }) {\n    const [add, setAdd] = useState(false);\n    const [reply, setReply] = useState(false);\n    const [text, setText] = useState(null);\n    const [date, setDate] = useState(new Date());\n    const [replyIndex, setReplyIndex] = useState(null);\n\n    useEffect(() => {\n        const intervalId = setInterval(() => {\n          setDate(new Date());\n        }, 1000); \n    \n        return () => clearInterval(intervalId); \n    }, []);\n\n    const handleAdd = () => {\n        setAdd(true);\n    }\n\n    const handlePost = () => {\n        setReports((prevReports) => [{text, date, replies: []}, ...prevReports]);\n        setAdd(false);    \n        setText(null);\n    }\n\n    const handleReply = (index) => {\n        setReply(true);\n        setReplyIndex(index);\n    }\n\n    const handlePostReply = (index) => {\n        setReports((prevReports) => {\n            return prevReports.map((report, i) => {\n                if (i === index) {\n                    return {\n                        ...report,\n                        replies: [...report.replies, {text, date}],\n                    };\n                }\n                return report; \n            });\n        });\n\n        setReply(false);\n        setReplyIndex(null);\n        setText(null);\n    }\n\n    return (\n        <>\n        <div className='container'>\n            <h1 className='report-header'>Report</h1>\n            <button onClick={handleAdd}>+ New Report</button>\n            <div className='text-editor'>\n                {add && \n                    <>\n                    <ReactQuill\n                        value={text}\n                        onChange={value => setText(value)}\n                    />\n                    <button onClick={handlePost}>Post</button>\n                    </>\n                }\n                <ul>\n                    {reports.map((report, index) => (\n                        <li className='reports' key={index}>\n                        <div>\n                            <p dangerouslySetInnerHTML={{ __html: report.text }} />\n                            <small>{report.date.toLocaleString()}</small>\n                        </div>\n                        <button onClick={() => handleReply(index)}>Reply</button>\n                        {reply && replyIndex === index &&\n                        <>\n                        <ReactQuill\n                            value={text}\n                            onChange={value => setText(value)}\n                        />\n                        <button onClick={() => handlePostReply(index)}>Post</button>\n                        </>\n                        }   \n                        {report.replies.map((reply, index) => (\n                            <li className='reports' key={index}>\n                                <div>\n                                    <p dangerouslySetInnerHTML={{ __html: reply.text }} />\n                                    <small>{report.date.toLocaleString()}</small>\n                                </div>\n                            </li>\n                        ))}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n        </>\n    );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}