{"ast":null,"code":"var _jsxFileName = \"/Users/heather/Desktop/CPSC_Courses/cpsc408/FinalProject/HealthPortal/frontend/src/components/Appointments.js\",\n  _s = $RefreshSig$();\n/*\nApointments page for users to view and manage their appointments.\n*/\n\nimport './Appointments.css';\nimport React, { useState } from 'react';\nimport Navbar from './Navbar';\nimport FullCalendar from '@fullcalendar/react';\nimport listPlugin from '@fullcalendar/list';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Appointments({\n  role\n}) {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [newEventTitle, setNewEventTitle] = useState('');\n  const [newEventDate, setNewEventDate] = useState('');\n  const [newEventTime, setNewEventTime] = useState('');\n  const [eventStatus, setEventStatus] = useState(false);\n  const handleDateClick = arg => {\n    alert('Date clicked: ' + arg.dateStr);\n  };\n  const [activePopup, setActivePopup] = useState(null);\n  // show or hide the popup\n  const togglePopup = AddEvent => {\n    setActivePopup(prevState => prevState === AddEvent ? null : AddEvent); // Toggle between showing and hiding\n  };\n\n  // Function to close the popup\n  const closePopup = () => {\n    setActivePopup(null);\n  };\n\n  // adding a new event to the calendar\n  const handleAddEvent = () => {\n    if (newEventTitle && newEventDate && newEventTime) {\n      const dateTime = `${newEventDate} ${newEventTime}`; // Combine date and time \n\n      const newEvent = {\n        id: events.length + 1,\n        // generate a simple id based on current event length\n        title: newEventTitle,\n        date: dateTime,\n        color: eventStatus ? \"#28a745\" : \"#ffc107\" // green if confirmed, yellow if not\n      };\n      setEvents([...events, newEvent]);\n      setNewEventTitle('');\n      setNewEventDate('');\n      setNewEventTime('');\n      setEventStatus(false); // update status message\n    } else {\n      alert('Please fill in all fields (title, date, and time).');\n    }\n  };\n\n  // deleting an event from the calendar\n  const handleEventClick = clickInfo => {\n    if (window.confirm('Are you sure you want to delete this event?')) {\n      // remove the event from FullCalendar\n      clickInfo.event.remove();\n      setEvents(events.filter(event => event.id !== clickInfo.event.id));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      role: role\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: () => togglePopup('Add Event'),\n      children: \"Add Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), activePopup === 'Add Event' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: closePopup,\n          children: \"\\u2716\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add a New Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-event-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Event Title\",\n            value: newEventTitle,\n            onChange: e => setNewEventTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: newEventDate,\n            onChange: e => setNewEventDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: newEventTime,\n            onChange: e => setNewEventTime(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\" Confirmed?\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: eventStatus,\n              onChange: e => setEventStatus(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              handleAddEvent();\n              closePopup();\n            },\n            children: \"Add Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calender-container\",\n      children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n        plugins: [listPlugin, interactionPlugin],\n        initialView: \"listMonth\",\n        events: events,\n        dateClick: handleDateClick,\n        eventClick: handleEventClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(Appointments, \"Os2qPnOeISXr9CTcmCFNXntuQTc=\");\n_c = Appointments;\nvar _c;\n$RefreshReg$(_c, \"Appointments\");","map":{"version":3,"names":["React","useState","Navbar","FullCalendar","listPlugin","interactionPlugin","jsxDEV","_jsxDEV","Appointments","role","_s","events","setEvents","newEventTitle","setNewEventTitle","newEventDate","setNewEventDate","newEventTime","setNewEventTime","eventStatus","setEventStatus","handleDateClick","arg","alert","dateStr","activePopup","setActivePopup","togglePopup","AddEvent","prevState","closePopup","handleAddEvent","dateTime","newEvent","id","length","title","date","color","handleEventClick","clickInfo","window","confirm","event","remove","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","checked","plugins","initialView","dateClick","eventClick","_c","$RefreshReg$"],"sources":["/Users/heather/Desktop/CPSC_Courses/cpsc408/FinalProject/HealthPortal/frontend/src/components/Appointments.js"],"sourcesContent":["/*\nApointments page for users to view and manage their appointments.\n*/\n\nimport './Appointments.css';\nimport React, { useState } from 'react'; \nimport Navbar from './Navbar';\n\nimport FullCalendar from '@fullcalendar/react';\nimport listPlugin from '@fullcalendar/list';\nimport interactionPlugin from '@fullcalendar/interaction'; \n\nexport default function Appointments({ role }) {\n    const [events, setEvents] = useState([]);\n    const [newEventTitle, setNewEventTitle] = useState('');\n    const [newEventDate, setNewEventDate] = useState('');\n    const [newEventTime, setNewEventTime] = useState('');\n    const [eventStatus, setEventStatus] = useState(false);\n\n    const handleDateClick = (arg) => {\n        alert('Date clicked: ' + arg.dateStr);\n    };\n    const [activePopup, setActivePopup] = useState(null);\n    // show or hide the popup\n    const togglePopup = (AddEvent) => {\n        setActivePopup(prevState => (prevState === AddEvent ? null : AddEvent)); // Toggle between showing and hiding\n    };\n\n    // Function to close the popup\n    const closePopup = () => {\n        setActivePopup(null);\n    };\n\n    // adding a new event to the calendar\n    const handleAddEvent = () => {\n        if (newEventTitle && newEventDate && newEventTime) {\n            const dateTime = `${newEventDate} ${newEventTime}`; // Combine date and time \n\n            const newEvent = {\n                id: events.length + 1,  // generate a simple id based on current event length\n                title: newEventTitle,\n                date: dateTime,\n                color: eventStatus ? \"#28a745\" : \"#ffc107\", // green if confirmed, yellow if not\n            };\n\n            setEvents([...events, newEvent]);\n            setNewEventTitle('');\n            setNewEventDate('');\n            setNewEventTime('');\n            setEventStatus(false); // update status message\n        } else {\n            alert('Please fill in all fields (title, date, and time).');\n        }\n    };\n\n    // deleting an event from the calendar\n    const handleEventClick = (clickInfo) => {\n        if (window.confirm('Are you sure you want to delete this event?')) {\n            // remove the event from FullCalendar\n            clickInfo.event.remove();\n            setEvents(events.filter(event => event.id !== clickInfo.event.id));\n        }\n    };\n\n    return (\n        <div className='container'>\n            <Navbar role={role} />\n            <h1>Your Events</h1>\n                <button className='button' onClick={() => togglePopup('Add Event')}>Add Event</button>\n\n                {activePopup === 'Add Event' && (\n                    <div className=\"popup\">\n                        <div className=\"popup-content\">\n                            <button className=\"close-btn\" onClick={closePopup}>✖</button>\n                            <h3>Add a New Event</h3>\n                            <div className='add-event-form'>\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Event Title\"\n                                    value={newEventTitle}\n                                    onChange={(e) => setNewEventTitle(e.target.value)}\n                                />\n                                <input\n                                    type=\"date\"\n                                    value={newEventDate}\n                                    onChange={(e) => setNewEventDate(e.target.value)}\n                                />\n                                <input\n                                    type=\"time\"\n                                    value={newEventTime}\n                                    onChange={(e) => setNewEventTime(e.target.value)}\n                                />\n                                <label> Confirmed?\n                                    <input\n                                        type=\"checkbox\"\n                                        checked={eventStatus}\n                                        onChange={(e) => setEventStatus(e.target.checked)}\n                                    />\n                                </label>\n                                <button onClick={() => { handleAddEvent(); closePopup(); }}>\n                                    Add Event\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                )}\n\n            <div className='calender-container'>\n                <FullCalendar\n                    plugins={[listPlugin, interactionPlugin]} \n                    initialView=\"listMonth\" \n                    events={events} \n                    dateClick={handleDateClick}\n                    eventClick={handleEventClick}\n                    />\n            </div>\n        </div>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}