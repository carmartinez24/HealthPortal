{"ast":null,"code":"var _jsxFileName = \"/Users/kellyung/Desktop/IrvineHacks/IrvineHacks/react-app/src/components/Report.js\",\n  _s = $RefreshSig$();\nimport './Report.css';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Report({\n  reports,\n  setReports\n}) {\n  _s();\n  const [add, setAdd] = useState(false);\n  const [reply, setReply] = useState(false);\n  const [text, setText] = useState(null);\n  const [date, setDate] = useState(new Date());\n  const [replyIndex, setReplyIndex] = useState(null);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setDate(new Date());\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, []);\n  const handleAdd = () => {\n    setAdd(true);\n  };\n  const handlePost = () => {\n    setReports(prevReports => [{\n      text,\n      date\n    }, ...prevReports]);\n    setAdd(false);\n    setText(null);\n  };\n  const handleReply = index => {\n    setReply(true);\n    setIndex(index);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"report-header\",\n        children: \"Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAdd,\n        children: \"+ New Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-editor\",\n        children: [add && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ReactQuill, {\n            value: text,\n            onChange: value => setText(value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePost,\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: reports.map((report, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"reports\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                dangerouslySetInnerHTML: {\n                  __html: report.text\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: report.date.toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleReply(index),\n              children: \"Reply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), reply && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(ReactQuill, {\n                value: text,\n                onChange: value => setText(value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handlePost,\n                children: \"Post\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Report, \"eeT2rxfLGv2Pka4MaBKS+ByAbGc=\");\n_c = Report;\n;\nvar _c;\n$RefreshReg$(_c, \"Report\");","map":{"version":3,"names":["useState","useEffect","ReactQuill","jsxDEV","_jsxDEV","Fragment","_Fragment","Report","reports","setReports","_s","add","setAdd","reply","setReply","text","setText","date","setDate","Date","replyIndex","setReplyIndex","intervalId","setInterval","clearInterval","handleAdd","handlePost","prevReports","handleReply","index","setIndex","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","map","report","dangerouslySetInnerHTML","__html","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/kellyung/Desktop/IrvineHacks/IrvineHacks/react-app/src/components/Report.js"],"sourcesContent":["import './Report.css';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n\nexport default function Report({ reports, setReports}) {\n    const [add, setAdd] = useState(false);\n    const [reply, setReply] = useState(false);\n    const [text, setText] = useState(null);\n    const [date, setDate] = useState(new Date());\n    const [replyIndex, setReplyIndex] = useState(null);\n\n    useEffect(() => {\n        const intervalId = setInterval(() => {\n          setDate(new Date());\n        }, 1000); \n    \n        return () => clearInterval(intervalId); \n    }, []);\n\n    const handleAdd = () => {\n        setAdd(true);\n    }\n\n    const handlePost = () => {\n        setReports((prevReports) => [{text, date}, ...prevReports]);\n        setAdd(false);    \n        setText(null);\n    }\n\n    const handleReply = (index) => {\n        setReply(true);\n        setIndex(index);\n    }\n\n    return (\n        <>\n        <div className='container'>\n            <h1 className='report-header'>Report</h1>\n            <button onClick={handleAdd}>+ New Report</button>\n            <div className='text-editor'>\n                {add && \n                    <>\n                    <ReactQuill\n                        value={text}\n                        onChange={value => setText(value)}\n                    />\n                    <button onClick={handlePost}>Post</button>\n                    </>\n                }\n                <ul>\n                    {reports.map((report, index) => (\n                        <li className='reports' key={index}>\n                            <div>\n                                <p dangerouslySetInnerHTML={{ __html: report.text }} />\n                                <small>{report.date.toLocaleString()}</small>\n                            </div>\n                            <button onClick={() => handleReply(index)}>Reply</button>\n                            {reply && \n                            <>\n                            <ReactQuill\n                                value={text}\n                                onChange={value => setText(value)}\n                            />\n                            <button onClick={handlePost}>Post</button>\n                            </>\n                        }   \n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n        </>\n    );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}